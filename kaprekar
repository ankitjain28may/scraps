#!/usr/bin/perl

# http://plus.maths.org/content/mysterious-number-6174

use 5.10.0;

use warnings;
use strict;

my %counts;
my %nsteps;
my %lasts;
my %next_to_lasts;

for ( 0..9999 ) {
    my $n = sprintf( '%04d', $_ );
    next if $n =~ /^(\d)\1\1\1$/;

    my @steps = kap( $n );
    say join ' ', @steps;

    shift @steps; # Don't track the original number
    ++$counts{$_} for @steps;
    ++$nsteps{ scalar @steps };
    ++$lasts{ @steps > 1 ? $steps[-2] : 'none' };
    ++$next_to_lasts{ @steps > 2 ? $steps[-3] : 'none' };
}

{use Data::Dumper; local $Data::Dumper::Sortkeys=1; print Dumper( \%counts)}
{use Data::Dumper; local $Data::Dumper::Sortkeys=1; print Dumper( \%nsteps)}
{use Data::Dumper; local $Data::Dumper::Sortkeys=1; print Dumper( \%lasts)}
{use Data::Dumper; local $Data::Dumper::Sortkeys=1; print Dumper( \%next_to_lasts)}

sub kap {
    my $n = shift;
    my @steps = ($n);

    do {
        my @digits = split //, $n;
        my $lo = join( '', sort @digits );
        my $hi = join( '', reverse sort @digits );
        $n = sprintf( '%04d', $hi - $lo );
        push( @steps, $n );
    } while ( $n != 6174 );

    return @steps;
}
